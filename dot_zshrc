# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=1000
setopt beep notify
bindkey -e
# End of lines configured by zsh-newuser-install
# The following lines were added by compinstall
zstyle :compinstall filename '/home/camperboy1000/.zshrc'

autoload -Uz compinit
compinit
# End of lines added by compinstall

# create a zkbd compatible hash;
# to add other keys to this hash, see: man 5 terminfo
typeset -g -A key

# Register keys with ZLE
key[Home]="${terminfo[khome]}"
key[End]="${terminfo[kend]}"
key[Insert]="${terminfo[kich1]}"
key[Backspace]="${terminfo[kbs]}"
key[Delete]="${terminfo[kdch1]}"
key[Up]="${terminfo[kcuu1]}"
key[Down]="${terminfo[kcud1]}"
key[Left]="${terminfo[kcub1]}"
key[Right]="${terminfo[kcuf1]}"
key[PageUp]="${terminfo[kpp]}"
key[PageDown]="${terminfo[knp]}"
key[Shift-Tab]="${terminfo[kcbt]}"
key[Control-Left]="${terminfo[kLFT5]}"
key[Control-Right]="${terminfo[kRIT5]}"

# Assign keys accordingly
[[ -n "${key[Home]}"            ]] && bindkey -- "${key[Home]}"             beginning-of-line
[[ -n "${key[End]}"             ]] && bindkey -- "${key[End]}"              end-of-line
[[ -n "${key[Insert]}"          ]] && bindkey -- "${key[Insert]}"           overwrite-mode
[[ -n "${key[Backspace]}"       ]] && bindkey -- "${key[Backspace]}"        backward-delete-char
[[ -n "${key[Delete]}"          ]] && bindkey -- "${key[Delete]}"           delete-char
[[ -n "${key[Up]}"              ]] && bindkey -- "${key[Up]}"               up-line-or-history
[[ -n "${key[Down]}"            ]] && bindkey -- "${key[Down]}"             down-line-or-history
[[ -n "${key[Left]}"            ]] && bindkey -- "${key[Left]}"             backward-char
[[ -n "${key[Right]}"           ]] && bindkey -- "${key[Right]}"            forward-char
[[ -n "${key[PageUp]}"          ]] && bindkey -- "${key[PageUp]}"           beginning-of-buffer-or-history
[[ -n "${key[PageDown]}"        ]] && bindkey -- "${key[PageDown]}"         end-of-buffer-or-history
[[ -n "${key[Shift-Tab]}"       ]] && bindkey -- "${key[Shift-Tab]}"        reverse-menu-complete
[[ -n "${key[Control-Left]}"    ]] && bindkey -- "${key[Control-Left]}"     backward-word
[[ -n "${key[Control-Right]}"   ]] && bindkey -- "${key[Control-Right]}"    forward-word

# Finally, make sure the terminal is in application mode, when zle is
# active. Only then are the values from $terminfo valid.
if (( ${+terminfo[smkx]} && ${+terminfo[rmkx]} )); then
    autoload -Uz add-zle-hook-widget
    function zle_application_mode_start { echoti smkx }
    function zle_application_mode_stop { echoti rmkx }
    add-zle-hook-widget -Uz zle-line-init zle_application_mode_start
    add-zle-hook-widget -Uz zle-line-finish zle_application_mode_stop
fi

# Check pacman package timestamp on every prompt
zshcache_time="$(date +%s%N)"
autoload -Uz add-zsh-hook
rehash_precmd() {
    if [[ -a /var/cache/zsh/pacman ]]; then
        local paccache_time="$(date -r /var/cache/zsh/pacman +%s%N)"
        if (( zshcache_time < paccache_time )); then
            rehash
            zshcache_time="$paccache_time"
        fi
    fi
}
add-zsh-hook -Uz precmd rehash_precmd

# Initallize FUCK
eval "$(thefuck --alias)"
eval "$(thefuck --alias FUCK)"

# Insult me when I screw up
if [ -f /etc/bash.command-not-found ]; then
    . /etc/bash.command-not-found
fi

# Based replacements
alias code=codium
alias cat=bat
alias ls=lsd
alias la='ls -a'
alias ll='ls -la'
alias lt='ls --tree'
alias pacdiff=eos-pacdiff

# Zsh Plugins
source /usr/share/zsh/plugins/fast-syntax-highlighting/fast-syntax-highlighting.plugin.zsh
source /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.plugin.zsh

# Starship Prompt
source <(/usr/bin/starship init zsh --print-full-init)
source /usr/share/nvm/init-nvm.sh

fastfetch
